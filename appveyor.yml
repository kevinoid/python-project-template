# AppVeyor configuration file
# https://www.appveyor.com/docs/appveyor-yml

# Test tox env matching AppVeyor Python version
# https://stackoverflow.com/a/46103989
#
# List of pre-installed Python versions:
# https://www.appveyor.com/docs/windows-images-software/#python
environment:
  matrix:
  - PYTHON: "C:\\Python27\\python.exe"
    TOXENV: py27
  - PYTHON: "C:\\Python35\\python.exe"
    TOXENV: py35
  # Note: Python 3.9 not supported yet.
  # See https://github.com/appveyor/ci/issues/3541
  - PYTHON: "C:\\Python38\\python.exe"
    # Uncomment to check docs and lint using Python 3.8
    # Commented since already checked using Travis CI
    # TOXENV: "docs,lint,py38"
    TOXENV: py38
  - PYTHON: pypy.exe
    PYURL: https://downloads.python.org/pypy/pypy2.7-v7.3.2-win32.zip
    PYSHA256: 0fd62265e0421a02432f10a294a712a5e784a8e061375e6d8ea5fd619be1be62
    TOXENV: pypy
  - PYTHON: pypy3.exe
    PYURL: https://downloads.python.org/pypy/pypy3.7-v7.3.2-win32.zip
    PYSHA256: e3c589be07760bc3042981c379b7fd1603e832a4db426075f09e090473846a96
    TOXENV: pypy3

# If the package has arch-dependent features, uncomment this and add -x64
# versions to matrix above (and possibly excluding non-x64 on x86 platform).
# platform:
#  - x86
#  - x64

install:
# Install PyPy if necessary.
# https://www.appveyor.com/docs/lang/python/#testing-against-pypy
# https://stackoverflow.com/a/30835387
- ps: |
    $ErrorActionPreference = 'Stop'
    if ($env:PYURL) {
        $pyUri = [Uri]$env:PYURL
        $pyFile = [IO.Path]::GetFileName($pyUri.LocalPath)
        $pyPath = Join-Path (Get-Location) $pyFile
        (New-Object Net.WebClient).DownloadFile($pyUri, $pyPath)

        $sha256Bytes = [Security.Cryptography.SHA256]::Create().ComputeHash(
            [IO.File]::OpenRead($pyPath))
        $sha256 = [BitConverter]::ToString($sha256Bytes).Replace('-', '')
        if ($sha256 -ne $env:PYSHA256) {
            Write-Error "$pyPath hash mismatch ($sha256 != $env:PYSHA256)"
        }

        7z x -bso0 -bsp0 $pyPath
        $env:PYTHON = Join-Path ($pyPath -replace '\.zip$','') $env:PYTHON
    }
- '"%PYTHON%" -m ensurepip'
- '"%PYTHON%" -m pip install --upgrade setuptools tox wheel'

# Disable build step, which we don't need
build: "off"

test_script:
- '"%PYTHON%" -m tox -vv'

after_test:
# build wheels
# Note: If building 64-bit C extensions on Python 3.3 or 3.4 see build.cmd from
# https://packaging.python.org/guides/supporting-windows-using-appveyor/#support-scripts
- '"%PYTHON%" setup.py bdist_wheel'

artifacts:
# save wheels as build artifacts
- path: dist\*

# If any job fails, fail build immediately to avoid wasting time/resources.
matrix:
  fast_finish: true
